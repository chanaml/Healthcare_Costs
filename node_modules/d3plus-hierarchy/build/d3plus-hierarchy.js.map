{"version":3,"file":"d3plus-hierarchy.js","sources":["../src/Pie.js","../src/Donut.js","../src/nest.js","../src/Tree.js","../src/Treemap.js"],"sourcesContent":["import {min} from \"d3-array\";\nimport {arc, pie} from \"d3-shape\";\n\nimport {accessor, assign, configPrep, constant, elem} from \"d3plus-common\";\nimport {Path} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\n/**\n    @class Pie\n    @extends Viz\n    @desc Uses the [d3 pie layout](https://github.com/d3/d3-shape#pies) to creates SVG arcs based on an array of data.\n*/\nexport default class Pie extends Viz {\n\n  /**\n      @memberof Pie\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._shapeConfig = assign(this._shapeConfig, {\n      Path: {\n        labelConfig: {\n          fontResize: true\n        }\n      }\n    });\n    this._innerRadius = 0;\n    this._padPixel = 0;\n    this._pie = pie();\n    this._sort = (a, b) => b.value - a.value;\n    this._value = accessor(\"value\");\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._height - this._margin.top - this._margin.bottom,\n          width = this._width - this._margin.left - this._margin.right;\n\n    const outerRadius = min([width, height]) / 2;\n\n    const pieData = this._pie\n      .padAngle(this._padAngle || this._padPixel / outerRadius)\n      .sort(this._sort)\n      .value(this._value)\n      (this._filteredData);\n\n    pieData.forEach((d, i) => {\n      d.__d3plus__ = true;\n      d.i = i;\n    });\n\n    const arcData = arc()\n      .innerRadius(this._innerRadius)\n      .outerRadius(outerRadius);\n\n    const transform = `translate(${width / 2}, ${height / 2})`;\n    this._shapes.push(new Path()\n      .data(pieData)\n      .d(arcData)\n      .select(elem(\"g.d3plus-Pie\", {\n        parent: this._select,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        id: d => this._ids(d).join(\"-\"),\n        x: 0,\n        y: 0\n      })\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the inner radius accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current inner radius accessor.\n      @param {Function|Number} [*value*]\n  */\n  innerRadius(_) {\n    return arguments.length ? (this._innerRadius = _, this) : this._innerRadius;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the arc padding to the specified radian value and returns the current class instance. If *value* is not specified, returns the current radian padding.\n      @param {Number} [*value*]\n  */\n  padAngle(_) {\n    return arguments.length ? (this._padAngle = _, this) : this._padAngle;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the arc padding to the specified pixel value and returns the current class instance. If *value* is not specified, returns the current pixel padding.\n      @param {Number} [*value*]\n  */\n  padPixel(_) {\n    return arguments.length ? (this._padPixel = _, this) : this._padPixel;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *comparator* is specified, sets the sort order for the pie slices using the specified comparator function. If *comparator* is not specified, returns the current sort order, which defaults to descending order by the associated input data's numeric value attribute.\n      @param {Array} [*comparator*]\n      @example\nfunction comparator(a, b) {\n  return b.value - a.value;\n}\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Pie\n      @desc If *value* is specified, sets the value accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current value accessor.\n      @param {Function|Number} [*value*]\n      @example\nfunction value(d) {\n  return d.value;\n}\n  */\n  value(_) {\n    return arguments.length ? (this._value = typeof _ === \"function\" ? _ : constant(_), this) : this._value;\n  }\n\n}\n","import {min} from \"d3-array\";\nimport {default as Pie} from \"./Pie\";\n\n/**\n    @class Donut\n    @extends Pie\n    @desc Extends the Pie visualization to create a donut chart.\n*/\nexport default class Donut extends Pie {\n\n  /**\n      @memberof Donut\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._innerRadius = () => min([\n      this._width - this._margin.left - this._margin.right,\n      this._height - this._margin.top - this._margin.bottom\n    ]) / 4;\n    this._padPixel = 5;\n\n  }\n\n}\n","import {nest} from \"d3-collection\";\n\n/**\n    @function nest\n    @summary Extends the base behavior of d3.nest to allow for multiple depth levels.\n    @param {Array} *data* The data array to be nested.\n    @param {Array} *keys* An array of key accessors that signify each nest level.\n*/\nexport default function(data, keys) {\n\n  if (!(keys instanceof Array)) keys = [keys];\n\n  const dataNest = nest();\n  for (let i = 0; i < keys.length; i++) dataNest.key(keys[i]);\n  const nestedData = dataNest.entries(data);\n\n  return bubble(nestedData);\n\n}\n\n/**\n    Bubbles up values that do not nest to the furthest key.\n    @param {Array} *values* The \"values\" of a nest object.\n    @private\n*/\nfunction bubble(values) {\n\n  return values.map(d => {\n\n    if (d.key && d.values) {\n      if (d.values[0].key === \"undefined\") return d.values[0].values[0];\n      else d.values = bubble(d.values);\n    }\n\n    return d;\n\n  });\n\n}\n","import {extent, min, max} from \"d3-array\";\nimport {hierarchy, tree} from \"d3-hierarchy\";\nimport {scaleLinear} from \"d3-scale\";\n\nimport {assign, configPrep, constant, elem, merge} from \"d3plus-common\";\nimport {Circle, Path} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\nimport {default as nest} from \"./nest\";\n\n/**\n    @class Tree\n    @extends Viz\n    @desc Uses d3's [tree layout](https://github.com/d3/d3-hierarchy#tree) to create a tidy tree chart based on an array of data.\n*/\nexport default class Tree extends Viz {\n\n  /**\n      @memberof Tree\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._orient = \"vertical\";\n    this._separation = (a, b) => a.parent === b.parent ? 1 : 2;\n\n    this._shape = constant(\"Circle\");\n    this._shapeConfig = assign(this._shapeConfig, {\n      labelConfig: {\n        fontColor: \"#444\"\n      },\n      Path: {\n        fill: \"none\",\n        stroke: \"#ccc\",\n        strokeWidth: 1\n      },\n      r: constant(5),\n      width: constant(10),\n      height: constant(10)\n    });\n\n    this._tree = tree();\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    const height = this._orient === \"vertical\"\n            ? this._height - this._margin.top - this._margin.bottom\n            : this._width - this._margin.left - this._margin.right,\n          left = this._orient === \"vertical\" ? \"left\" : \"top\",\n          that = this,\n          transform = `translate(${this._margin.left}, ${this._margin.top})`,\n          width = this._orient === \"horizontal\"\n            ? this._height - this._margin.top - this._margin.bottom\n            : this._width - this._margin.left - this._margin.right;\n\n    const treeData = this._tree\n      .separation(this._separation)\n      .size([width, height])\n      (hierarchy({\n        key: \"root\",\n        values: nest(this._filteredData, this._groupBy.slice(0, this._drawDepth + 1))\n      }, d => d.key && d.values ? d.values : null).sort(this._sort))\n      .descendants()\n      .filter(d => d.depth <= this._groupBy.length && d.parent);\n\n    /**\n        Merges the values of a given nest branch.\n        @private\n    */\n    function flattenBranchData(branch) {\n      return merge(branch.values.map(l => l.key && l.values ? flattenBranchData(l) : l), that._aggs);\n    }\n\n    treeData.forEach((d, i) => {\n      if (d.data.key && d.data.values) d.data = flattenBranchData(d.data);\n      d.__d3plus__ = true;\n      d.i = i;\n    });\n\n    let r = this._shapeConfig.r;\n    if (typeof r !== \"function\") r = constant(r);\n    const rBufferRoot = max(treeData, d => d.depth === 1 ? r(d.data, d.i) : 0);\n    const rBufferEnd = max(treeData, d => d.children ? 0 : r(d.data, d.i));\n\n    const yExtent = extent(treeData, d => d.y);\n    this._labelHeight = min([\n      this._orient === \"vertical\" ? 50 : 100,\n      (yExtent[1] - rBufferRoot - rBufferEnd) / (this._groupBy.length + 1)\n    ]);\n\n    this._labelWidths = nest(treeData, d => d.depth)\n      .map(d => d.values.reduce((num, v, i) => {\n        const next = i < d.values.length - 1 ? d.values[i + 1].x : width + this._margin[left],\n              prev = i ? d.values[i - 1].x : this._margin[left];\n        return min([num, next - v.x, v.x - prev]);\n      }, width));\n\n    const yScale = scaleLinear()\n      .domain(yExtent)\n      .range([rBufferRoot + this._labelHeight, height - rBufferEnd - this._labelHeight]);\n\n    treeData.forEach(d => {\n      const val = yScale(d.y);\n      if (this._orient === \"horizontal\") {\n        d.y = d.x;\n        d.x = val;\n      }\n      else d.y = val;\n    });\n\n    const elemObject = {parent: this._select, enter: {transform}, update: {transform}};\n\n    this._shapes.push(new Path()\n      .data(treeData.filter(d => d.depth > 1))\n      .select(elem(\"g.d3plus-Tree-Links\", elemObject).node())\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Path\"))\n      .config({\n        d: d => {\n\n          let r = this._shapeConfig.r;\n\n          if (typeof r === \"function\") r = r(d.data, d.i);\n\n          const px = d.parent.x - d.x + (this._orient === \"vertical\" ? 0 : r),\n                py = d.parent.y - d.y + (this._orient === \"vertical\" ? r : 0),\n                x = this._orient === \"vertical\" ? 0 : -r,\n                y = this._orient === \"vertical\" ? -r : 0;\n\n          return this._orient === \"vertical\"\n            ? `M${x},${y}C${x},${(y + py) / 2} ${px},${(y + py) / 2} ${px},${py}`\n            : `M${x},${y}C${(x + px) / 2},${y} ${(x + px) / 2},${py} ${px},${py}`;\n\n        },\n        id: (d, i) => this._ids(d, i).join(\"-\")\n      })\n      .render());\n\n    this._shapes.push(new Circle()\n      .data(treeData)\n      .select(elem(\"g.d3plus-Tree-Shapes\", elemObject).node())\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Circle\"))\n      .config({\n        id: (d, i) => this._ids(d, i).join(\"-\"),\n        label: (d, i) => {\n          if (this._label) return this._label(d.data, i);\n          const ids = this._ids(d, i).slice(0, d.depth);\n          return ids[ids.length - 1];\n        },\n        labelConfig: {\n          textAnchor: d => this._orient === \"vertical\" ? \"middle\"\n            : d.data.children && d.data.depth !== this._groupBy.length ? \"end\" : \"start\",\n          verticalAlign: d => this._orient === \"vertical\" ? d.data.depth === 1 ? \"bottom\" : \"top\" : \"middle\"\n        },\n        hitArea: (d, i, s) => {\n\n          const h = this._labelHeight,\n                w = this._labelWidths[d.depth - 1];\n\n          return {\n            width: this._orient === \"vertical\" ? w : s.r * 2 + w,\n            height: this._orient === \"horizontal\" ? h : s.r * 2 + h,\n            x: this._orient === \"vertical\" ? -w / 2 : d.children && d.depth !== this._groupBy.length ? -(s.r + w) : -s.r,\n            y: this._orient === \"horizontal\" ? -h / 2 : d.children && d.depth !== this._groupBy.length ? -(s.r + this._labelHeight) : -s.r\n          };\n\n        },\n        labelBounds: (d, i, s) => {\n\n          const h = this._labelHeight,\n                height = this._orient === \"vertical\" ? \"height\" : \"width\",\n                w = this._labelWidths[d.depth - 1],\n                width = this._orient === \"vertical\" ? \"width\" : \"height\",\n                x = this._orient === \"vertical\" ? \"x\" : \"y\",\n                y = this._orient === \"vertical\" ? \"y\" : \"x\";\n\n          return {\n            [width]: w,\n            [height]: h,\n            [x]: -w / 2,\n            [y]: d.children && d.depth !== this._groupBy.length ? -(s.r + h) : s.r\n          };\n\n        }\n      })\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Tree\n      @desc If *value* is specified, sets the orientation to the specified value. If *value* is not specified, returns the current orientation.\n      @param {String} [*value* = \"vertical\"] Accepts either \"vertical\" or \"horizontal\".\n  */\n  orient(_) {\n    return arguments.length ? (this._orient = _, this) : this._orient;\n  }\n\n  /**\n      @memberof Tree\n      @desc If *value* is specified, sets the separation accessor to the specified function. If *value* is not specified, returns the current separation accessor.\n\nFrom the [d3-hierarchy documentation](https://github.com/d3/d3-hierarchy#tree_separation):\n> The separation accessor is used to separate neighboring nodes. The separation function is passed two nodes a and b, and must return the desired separation. The nodes are typically siblings, though the nodes may be more distantly related if the layout decides to place such nodes adjacent.\n      @param {Function} [*value*]\n      @example\nfunction separation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n  */\n  separation(_) {\n    return arguments.length ? (this._separation = _, this) : this._separation;\n  }\n\n}\n","import {nest} from \"d3-collection\";\nimport {hierarchy, treemap, treemapSquarify} from \"d3-hierarchy\";\n\nimport {accessor, assign, configPrep, constant, elem, merge} from \"d3plus-common\";\nimport {Rect} from \"d3plus-shape\";\nimport {Viz} from \"d3plus-viz\";\n\n/**\n    @class Treemap\n    @extends Viz\n    @desc Uses the [d3 treemap layout](https://github.com/mbostock/d3/wiki/Treemap-Layout) to creates SVG rectangles based on an array of data. See [this example](https://d3plus.org/examples/d3plus-hierarchy/getting-started/) for help getting started using the treemap generator.\n*/\nexport default class Treemap extends Viz {\n\n  /**\n      @memberof Treemap\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._padding = 1;\n    this._shapeConfig = assign({}, this._shapeConfig, {\n      labelConfig: {\n        fontResize: true\n      }\n    });\n    this._sort = (a, b) => b.value - a.value;\n    this._sum = accessor(\"value\");\n    this._tile = treemapSquarify;\n    this._treemap = treemap().round(true);\n\n  }\n\n  /**\n      Extends the draw behavior of the abstract Viz class.\n      @private\n  */\n  _draw(callback) {\n\n    super._draw(callback);\n\n    let nestedData = nest();\n    for (let i = 0; i <= this._drawDepth; i++) nestedData.key(this._groupBy[i]);\n    nestedData = nestedData.entries(this._filteredData);\n\n    const tmapData = this._treemap\n      .padding(this._padding)\n      .size([\n        this._width - this._margin.left - this._margin.right,\n        this._height - this._margin.top - this._margin.bottom\n      ])\n      .tile(this._tile)\n      (hierarchy({values: nestedData}, d => d.values).sum(this._sum).sort(this._sort));\n\n    const shapeData = [], that = this;\n\n    /**\n        Flattens and merges treemap data.\n        @private\n    */\n    function extractLayout(children) {\n      for (let i = 0; i < children.length; i++) {\n        const node = children[i];\n        if (node.depth <= that._drawDepth) extractLayout(node.children);\n        else {\n          node.__d3plus__ = true;\n          node.id = node.data.key;\n          node.data = merge(node.data.values);\n          node.i = i;\n          node.x = node.x0 + (node.x1 - node.x0) / 2;\n          node.y = node.y0 + (node.y1 - node.y0) / 2;\n          shapeData.push(node);\n        }\n      }\n    }\n    if (tmapData.children) extractLayout(tmapData.children);\n    const total = tmapData.value;\n\n    const transform = `translate(${this._margin.left}, ${this._margin.top})`;\n    this._shapes.push(new Rect()\n      .data(shapeData)\n      .label(d => [\n        this._drawLabel(d.data, d.i),\n        `${Math.round(this._sum(d.data, d.i) / total * 100)}%`\n      ])\n      .select(elem(\"g.d3plus-Treemap\", {\n        parent: this._select,\n        enter: {transform},\n        update: {transform}\n      }).node())\n      .config({\n        height: d => d.y1 - d.y0,\n        labelBounds: (d, i, s) => {\n          const h = s.height;\n          const sh = Math.min(50, h * 0.25);\n          return [\n            {width: s.width, height: h - sh, x: -s.width / 2, y: -h / 2},\n            {width: s.width, height: sh, x: -s.width / 2, y: h / 2 - sh}\n          ];\n        },\n        labelConfig: {\n          textAnchor: d => d.l ? \"middle\" : \"start\",\n          verticalAlign: d => d.l ? \"bottom\" : \"top\"\n        },\n        width: d => d.x1 - d.x0\n      })\n      .config(configPrep.bind(this)(this._shapeConfig, \"shape\", \"Rect\"))\n      .render());\n\n    return this;\n\n  }\n\n  /**\n      @memberof Treemap\n      @desc If *value* is specified, sets the inner and outer padding accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current padding accessor.\n      @param {Function|Number} [*value*]\n  */\n  padding(_) {\n    return arguments.length ? (this._padding = typeof _ === \"function\" ? _ : constant(_), this) : this._padding;\n  }\n\n  /**\n      @memberof Treemap\n      @desc If *comparator* is specified, sets the sort order for the treemap using the specified comparator function. If *comparator* is not specified, returns the current group sort order, which defaults to descending order by the associated input data's numeric value attribute.\n      @param {Array} [*comparator*]\n      @example\nfunction comparator(a, b) {\n  return b.value - a.value;\n}\n  */\n  sort(_) {\n    return arguments.length ? (this._sort = _, this) : this._sort;\n  }\n\n  /**\n      @memberof Treemap\n      @desc If *value* is specified, sets the sum accessor to the specified function or number and returns the current class instance. If *value* is not specified, returns the current sum accessor.\n      @param {Function|Number} [*value*]\n      @example\nfunction sum(d) {\n  return d.sum;\n}\n  */\n  sum(_) {\n    return arguments.length ? (this._sum = typeof _ === \"function\" ? _ : constant(_), this) : this._sum;\n  }\n\n  /**\n      @memberof Treemap\n      @desc If *value* is specified, sets the [tiling method](https://github.com/d3/d3-hierarchy#treemap-tiling) to the specified function and returns the current class instance. If *value* is not specified, returns the current [tiling method](https://github.com/d3/d3-hierarchy#treemap-tiling).\n      @param {Function} [*value*]\n  */\n  tile(_) {\n    return arguments.length ? (this._tile = _, this) : this._tile;\n  }\n\n}\n"],"names":["super","assign","pie","accessor","const","min","arc","Path","elem","this","configPrep","constant","Viz","nest","let","tree","hierarchy","merge","max","extent","scaleLinear","Circle","treemapSquarify","treemap","Rect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,IAAqB,GAAG;EAOtB,YAAW,GAAG;;IAEZA,WAAK,KAAC,CAAC,CAAC;;IAER,IAAI,CAAC,YAAY,GAAGC,mBAAM,CAAC,IAAI,CAAC,YAAY,EAAE;MAC5C,IAAI,EAAE;QACJ,WAAW,EAAE;UACX,UAAU,EAAE,IAAI;SACjB;OACF;KACF,CAAC,CAAC;IACH,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IACtB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAAC,IAAI,GAAGC,WAAG,EAAE,CAAC;IAClB,IAAI,CAAC,KAAK,aAAI,CAAC,EAAE,CAAC,EAAE,SAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,QAAK,CAAC;IACzC,IAAI,CAAC,MAAM,GAAGC,qBAAQ,CAAC,OAAO,CAAC,CAAC;;;;;;kCAEjC;;;;;;gBAMD,wBAAM,QAAQ,EAAE;;;;IAEdH,gBAAK,CAAC,UAAK,OAAC,QAAQ,CAAC,CAAC;;IAEtBI,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;UAC9D,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;;IAEnEA,IAAM,WAAW,GAAGC,WAAG,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;;IAE7CD,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI;OACtB,QAAQ,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;OACxD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;OAChB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;OAClB,IAAI,CAAC,aAAa,CAAC,CAAC;;IAEvB,OAAO,CAAC,OAAO,WAAE,CAAC,EAAE,CAAC,EAAE;MACrB,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;MACpB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACT,CAAC,CAAC;;IAEHA,IAAM,OAAO,GAAGE,WAAG,EAAE;OAClB,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC;OAC9B,WAAW,CAAC,WAAW,CAAC,CAAC;;IAE5BF,IAAM,SAAS,GAAG,gBAAa,KAAK,GAAG,EAAC,WAAK,MAAM,GAAG,EAAC,MAAG,CAAC;IAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAIG,gBAAI,EAAE;OACzB,IAAI,CAAC,OAAO,CAAC;OACb,CAAC,CAAC,OAAO,CAAC;OACV,MAAM,CAACC,iBAAI,CAAC,cAAc,EAAE;QAC3B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,KAAK,EAAE,YAAC,SAAS,CAAC;QAClB,MAAM,EAAE,YAAC,SAAS,CAAC;OACpB,CAAC,CAAC,IAAI,EAAE,CAAC;OACT,MAAM,CAAC;QACN,EAAE,YAAE,GAAE,SAAGC,MAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAC;QAC/B,CAAC,EAAE,CAAC;QACJ,CAAC,EAAE,CAAC;OACL,CAAC;OACD,MAAM,CAACC,uBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;OACjE,MAAM,EAAE,CAAC,CAAC;;IAEb,OAAO,IAAI,CAAC;;IAEb;;;;;;;gBAOD,oCAAY,CAAC,EAAE;IACb,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC;IAC7E;;;;;;;gBAOD,8BAAS,CAAC,EAAE;IACV,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;IACvE;;;;;;;gBAOD,8BAAS,CAAC,EAAE;IACV,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;IACvE;;;;;;;;;;;gBAWD,sBAAK,CAAC,EAAE;IACN,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;IAC/D;;;;;;;;;;;gBAWD,wBAAM,CAAC,EAAE;IACP,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,UAAU,GAAG,CAAC,GAAGC,qBAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC;GACzG;;;EA9H8BC;;;;;;;ACJjC,IAAqB,KAAK;EAOxB,cAAW,GAAG;;;;IAEZZ,WAAK,KAAC,CAAC,CAAC;;IAER,IAAI,CAAC,YAAY,eAAM,SAAGK,WAAG,CAAC;MAC5BI,MAAI,CAAC,MAAM,GAAGA,MAAI,CAAC,OAAO,CAAC,IAAI,GAAGA,MAAI,CAAC,OAAO,CAAC,KAAK;MACpDA,MAAI,CAAC,OAAO,GAAGA,MAAI,CAAC,OAAO,CAAC,GAAG,GAAGA,MAAI,CAAC,OAAO,CAAC,MAAM;KACtD,CAAC,GAAG,IAAC,CAAC;IACP,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;;;;;;;;;EAfY;;;;;;;;ACAnC,AAAe,gBAAS,IAAI,EAAE,IAAI,EAAE;;EAElC,IAAI,EAAE,IAAI,YAAY,KAAK,CAAC,IAAE,IAAI,GAAG,CAAC,IAAI,CAAC,GAAC;;EAE5CL,IAAM,QAAQ,GAAGS,iBAAI,EAAE,CAAC;EACxB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,IAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAC;EAC5DV,IAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;EAE1C,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC;;CAE3B;;;;;;;AAOD,SAAS,MAAM,CAAC,MAAM,EAAE;;EAEtB,OAAO,MAAM,CAAC,GAAG,WAAC,GAAE;;IAElB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,EAAE;MACrB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,WAAW,IAAE,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAC;aAC7D,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAC;KAClC;;IAED,OAAO,CAAC,CAAC;;GAEV,CAAC,CAAC;;CAEJ;;;;;;;ACvBD,IAAqB,IAAI;EAOvB,aAAW,GAAG;;IAEZJ,WAAK,KAAC,CAAC,CAAC;;IAER,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;IAC1B,IAAI,CAAC,WAAW,aAAI,CAAC,EAAE,CAAC,EAAE,SAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,IAAC,CAAC;;IAE3D,IAAI,CAAC,MAAM,GAAGW,qBAAQ,CAAC,QAAQ,CAAC,CAAC;IACjC,IAAI,CAAC,YAAY,GAAGV,mBAAM,CAAC,IAAI,CAAC,YAAY,EAAE;MAC5C,WAAW,EAAE;QACX,SAAS,EAAE,MAAM;OAClB;MACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,MAAM;QACd,WAAW,EAAE,CAAC;OACf;MACD,CAAC,EAAEU,qBAAQ,CAAC,CAAC,CAAC;MACd,KAAK,EAAEA,qBAAQ,CAAC,EAAE,CAAC;MACnB,MAAM,EAAEA,qBAAQ,CAAC,EAAE,CAAC;KACrB,CAAC,CAAC;;IAEH,IAAI,CAAC,KAAK,GAAGI,gBAAI,EAAE,CAAC;;;;;;oCAErB;;;;;;iBAMD,wBAAM,QAAQ,EAAE;;;;;IAEdf,gBAAK,CAAC,UAAK,OAAC,QAAQ,CAAC,CAAC;;IAEtBI,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,KAAK,UAAU;cAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;cACrD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;UACxD,IAAI,GAAG,IAAI,CAAC,OAAO,KAAK,UAAU,GAAG,MAAM,GAAG,KAAK;UACnD,IAAI,GAAG,IAAI;UACX,SAAS,GAAG,gBAAa,IAAI,CAAC,OAAO,CAAC,KAAI,WAAK,IAAI,CAAC,OAAO,CAAC,IAAG,MAAG;UAClE,KAAK,GAAG,IAAI,CAAC,OAAO,KAAK,YAAY;cACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;cACrD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;;IAE/DA,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK;OACxB,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC;OAC5B,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;OACrBY,qBAAS,CAAC;QACT,GAAG,EAAE,MAAM;QACX,MAAM,EAAEH,MAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;OAC9E,YAAE,GAAE,SAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,OAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;OAC7D,WAAW,EAAE;OACb,MAAM,WAAC,GAAE,SAAG,CAAC,CAAC,KAAK,IAAIJ,MAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC,SAAM,CAAC,CAAC;;;;;;IAM5D,SAAS,iBAAiB,CAAC,MAAM,EAAE;MACjC,OAAOQ,kBAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,WAAC,GAAE,SAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,GAAG,iBAAiB,CAAC,CAAC,CAAC,GAAG,IAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KAChG;;IAED,QAAQ,CAAC,OAAO,WAAE,CAAC,EAAE,CAAC,EAAE;MACtB,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,IAAE,CAAC,CAAC,IAAI,GAAG,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,GAAC;MACpE,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;MACpB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACT,CAAC,CAAC;;IAEHH,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC5B,IAAI,OAAO,CAAC,KAAK,UAAU,IAAE,CAAC,GAAGH,qBAAQ,CAAC,CAAC,CAAC,GAAC;IAC7CP,IAAM,WAAW,GAAGc,WAAG,CAAC,QAAQ,YAAE,GAAE,SAAG,CAAC,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAC,CAAC,CAAC;IAC3Ed,IAAM,UAAU,GAAGc,WAAG,CAAC,QAAQ,YAAE,GAAE,SAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAC,CAAC,CAAC;;IAEvEd,IAAM,OAAO,GAAGe,cAAM,CAAC,QAAQ,YAAE,GAAE,SAAG,CAAC,CAAC,IAAC,CAAC,CAAC;IAC3C,IAAI,CAAC,YAAY,GAAGd,WAAG,CAAC;MACtB,IAAI,CAAC,OAAO,KAAK,UAAU,GAAG,EAAE,GAAG,GAAG;MACtC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,WAAW,GAAG,UAAU,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;KACrE,CAAC,CAAC;;IAEH,IAAI,CAAC,YAAY,GAAGQ,MAAI,CAAC,QAAQ,YAAE,GAAE,SAAG,CAAC,CAAC,QAAK,CAAC;OAC7C,GAAG,WAAC,GAAE,SAAG,CAAC,CAAC,MAAM,CAAC,MAAM,WAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;QACpCT,IAAM,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAGK,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC;cAC/E,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGA,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxD,OAAOJ,WAAG,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;OAC3C,EAAE,KAAK,IAAC,CAAC,CAAC;;IAEbD,IAAM,MAAM,GAAGgB,mBAAW,EAAE;OACzB,MAAM,CAAC,OAAO,CAAC;OACf,KAAK,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,EAAE,MAAM,GAAG,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;;IAErF,QAAQ,CAAC,OAAO,WAAC,GAAE;MACjBhB,IAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxB,IAAIK,MAAI,CAAC,OAAO,KAAK,YAAY,EAAE;QACjC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;OACX;aACI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAC;KAChB,CAAC,CAAC;;IAEHL,IAAM,UAAU,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,YAAC,SAAS,CAAC,EAAE,MAAM,EAAE,YAAC,SAAS,CAAC,CAAC,CAAC;;IAEnF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAIG,gBAAI,EAAE;OACzB,IAAI,CAAC,QAAQ,CAAC,MAAM,WAAC,GAAE,SAAG,CAAC,CAAC,KAAK,GAAG,IAAC,CAAC,CAAC;OACvC,MAAM,CAACC,iBAAI,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;OACtD,MAAM,CAACE,uBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;OACjE,MAAM,CAAC;QACN,CAAC,YAAE,GAAE;;UAEHI,IAAI,CAAC,GAAGL,MAAI,CAAC,YAAY,CAAC,CAAC,CAAC;;UAE5B,IAAI,OAAO,CAAC,KAAK,UAAU,IAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAC;;UAEhDL,IAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAIK,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC7D,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAIA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC7D,CAAC,GAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;gBACxC,CAAC,GAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;UAE/C,OAAOA,MAAI,CAAC,OAAO,KAAK,UAAU;qBAC1B,CAAC,SAAI,CAAC,SAAI,CAAC,UAAI,CAAC,CAAC,GAAG,EAAE,IAAI,EAAC,SAAI,EAAE,UAAI,CAAC,CAAC,GAAG,EAAE,IAAI,EAAC,SAAI,EAAE,SAAI,EAAE;qBAC7D,CAAC,SAAI,CAAC,UAAI,CAAC,CAAC,GAAG,EAAE,IAAI,EAAC,SAAI,CAAC,UAAI,CAAC,CAAC,GAAG,EAAE,IAAI,EAAC,SAAI,EAAE,SAAI,EAAE,SAAI,EAAE,CAAE,CAAC;;SAEzE;QACD,EAAE,YAAG,CAAC,EAAE,CAAC,EAAE,SAAGA,MAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAC;OACxC,CAAC;OACD,MAAM,EAAE,CAAC,CAAC;;IAEb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAIY,kBAAM,EAAE;OAC3B,IAAI,CAAC,QAAQ,CAAC;OACd,MAAM,CAACb,iBAAI,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;OACvD,MAAM,CAACE,uBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;OACnE,MAAM,CAAC;QACN,EAAE,YAAG,CAAC,EAAE,CAAC,EAAE,SAAGD,MAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAC;QACvC,KAAK,YAAG,CAAC,EAAE,CAAC,EAAE;UACZ,IAAIA,MAAI,CAAC,MAAM,IAAE,OAAOA,MAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAC;UAC/CL,IAAM,GAAG,GAAGK,MAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;UAC9C,OAAO,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SAC5B;QACD,WAAW,EAAE;UACX,UAAU,YAAE,GAAE,SAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,QAAQ;cACnD,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,KAAKA,MAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,GAAG,UAAO;UAC9E,aAAa,YAAE,GAAE,SAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,QAAQ,GAAG,KAAK,GAAG,WAAQ;SACnG;QACD,OAAO,YAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;;UAEjBL,IAAM,CAAC,GAAGK,MAAI,CAAC,YAAY;gBACrB,CAAC,GAAGA,MAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;;UAEzC,OAAO;YACL,KAAK,EAAEA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;YACpD,MAAM,EAAEA,MAAI,CAAC,OAAO,KAAK,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;YACvD,CAAC,EAAEA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAKA,MAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5G,CAAC,EAAEA,MAAI,CAAC,OAAO,KAAK,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAKA,MAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,GAAGA,MAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;WAC/H,CAAC;;SAEH;QACD,WAAW,YAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;;UAErBL,IAAM,CAAC,GAAGK,MAAI,CAAC,YAAY;gBACrB,MAAM,GAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,QAAQ,GAAG,OAAO;gBACzD,CAAC,GAAGA,MAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;gBAClC,KAAK,GAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,OAAO,GAAG,QAAQ;gBACxD,CAAC,GAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,GAAG,GAAG,GAAG;gBAC3C,CAAC,GAAGA,MAAI,CAAC,OAAO,KAAK,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC;;UAElD,eAAO,EAAC,KACN,CAAC,KAAK,CAAC,GAAE,CAAC,KACV,CAAC,MAAM,CAAC,GAAE,CAAC,KACX,CAAC,CAAC,CAAC,GAAE,CAAC,CAAC,GAAG,CAAC,KACX,CAAC,CAAC,CAAC,GAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,KAAKA,MAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OACtE;;SAEH;OACF,CAAC;OACD,MAAM,EAAE,CAAC,CAAC;;IAEb,OAAO,IAAI,CAAC;;IAEb;;;;;;;iBAOD,0BAAO,CAAC,EAAE;IACR,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC;IACnE;;;;;;;;;;;;;;iBAcD,kCAAW,CAAC,EAAE;IACZ,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC;GAC3E;;;EAjN+BG;;;;;;;ACHlC,IAAqB,OAAO;EAO1B,gBAAW,GAAG;;IAEZZ,WAAK,KAAC,CAAC,CAAC;;IAER,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAAC,YAAY,GAAGC,mBAAM,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,EAAE;MAChD,WAAW,EAAE;QACX,UAAU,EAAE,IAAI;OACjB;KACF,CAAC,CAAC;IACH,IAAI,CAAC,KAAK,aAAI,CAAC,EAAE,CAAC,EAAE,SAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,QAAK,CAAC;IACzC,IAAI,CAAC,IAAI,GAAGE,qBAAQ,CAAC,OAAO,CAAC,CAAC;IAC9B,IAAI,CAAC,KAAK,GAAGmB,2BAAe,CAAC;IAC7B,IAAI,CAAC,QAAQ,GAAGC,mBAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;;;;;0CAEvC;;;;;;oBAMD,wBAAM,QAAQ,EAAE;;;;IAEdvB,gBAAK,CAAC,UAAK,OAAC,QAAQ,CAAC,CAAC;;IAEtBc,IAAI,UAAU,GAAGD,iBAAI,EAAE,CAAC;IACxB,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,IAAE,UAAU,CAAC,GAAG,CAACL,MAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAC;IAC5E,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;IAEpDL,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ;OAC3B,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;OACtB,IAAI,CAAC;QACJ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;QACpD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;OACtD,CAAC;OACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;OAChBY,qBAAS,CAAC,CAAC,MAAM,EAAE,UAAU,CAAC,YAAE,GAAE,SAAG,CAAC,CAAC,SAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;IAEnFZ,IAAM,SAAS,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC;;;;;;IAMlC,SAAS,aAAa,CAAC,QAAQ,EAAE;MAC/B,KAAKU,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACxCV,IAAM,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,IAAE,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAC;aAC3D;UACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;UACvB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;UACxB,IAAI,CAAC,IAAI,GAAGa,kBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UACpC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;UACX,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;UAC3C,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;UAC3C,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtB;OACF;KACF;IACD,IAAI,QAAQ,CAAC,QAAQ,IAAE,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAC;IACxDb,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;;IAE7BA,IAAM,SAAS,GAAG,gBAAa,IAAI,CAAC,OAAO,CAAC,KAAI,WAAK,IAAI,CAAC,OAAO,CAAC,IAAG,MAAG,CAAC;IACzE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAIoB,gBAAI,EAAE;OACzB,IAAI,CAAC,SAAS,CAAC;OACf,KAAK,WAAC,GAAE,SAAG;QACVf,MAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;UACzB,IAAI,CAAC,KAAK,CAACA,MAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG;UACnD,CAAC;OACD,MAAM,CAACD,iBAAI,CAAC,kBAAkB,EAAE;QAC/B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,KAAK,EAAE,YAAC,SAAS,CAAC;QAClB,MAAM,EAAE,YAAC,SAAS,CAAC;OACpB,CAAC,CAAC,IAAI,EAAE,CAAC;OACT,MAAM,CAAC;QACN,MAAM,YAAE,GAAE,SAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,KAAE;QACxB,WAAW,YAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;UACrBJ,IAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;UACnBA,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;UAClC,OAAO;YACL,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;YAC5D,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;WAC7D,CAAC;SACH;QACD,WAAW,EAAE;UACX,UAAU,YAAE,GAAE,SAAG,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAO;UACzC,aAAa,YAAE,GAAE,SAAG,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,QAAK;SAC3C;QACD,KAAK,YAAE,GAAE,SAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,KAAE;OACxB,CAAC;OACD,MAAM,CAACM,uBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;OACjE,MAAM,EAAE,CAAC,CAAC;;IAEb,OAAO,IAAI,CAAC;;IAEb;;;;;;;oBAOD,4BAAQ,CAAC,EAAE;IACT,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,UAAU,GAAG,CAAC,GAAGC,qBAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC;IAC7G;;;;;;;;;;;oBAWD,sBAAK,CAAC,EAAE;IACN,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;IAC/D;;;;;;;;;;;oBAWD,oBAAI,CAAC,EAAE;IACL,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,UAAU,GAAG,CAAC,GAAGA,qBAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;IACrG;;;;;;;oBAOD,sBAAK,CAAC,EAAE;IACN,OAAO,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;GAC/D;;;EAlJkCC;;;;;;;;;;;;;;;"}